{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///Users/hisaya.kobayashi/MyProject/quiz-creation-chatbot/src/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || '';\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || '';\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  console.warn('⚠️ Supabase environment variables are not set.');\n  console.warn('Please set NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY in your .env file.');\n  console.warn('Using dummy values for development - authentication will not work.');\n}\n\nexport const supabase = createClient(\n  supabaseUrl || 'https://dummy.supabase.co',\n  supabaseAnonKey || 'dummy-anon-key'\n);\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,wBAAwB,IAAI;AAC5D,MAAM,kBAAkB,QAAQ,GAAG,CAAC,6BAA6B,IAAI;AAErE,IAAI,CAAC,eAAe,CAAC,iBAAiB;IACpC,QAAQ,IAAI,CAAC;IACb,QAAQ,IAAI,CAAC;IACb,QAAQ,IAAI,CAAC;AACf;AAEO,MAAM,WAAW,IAAA,uMAAY,EAClC,eAAe,6BACf,mBAAmB","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///Users/hisaya.kobayashi/MyProject/quiz-creation-chatbot/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabaseClient';\nimport type { User, Session } from '@supabase/supabase-js';\nimport type { Profile } from '../types/database';\n\ninterface AuthContextType {\n  user: User | null;\n  profile: Profile | null;\n  session: Session | null;\n  loading: boolean;\n  signInWithGoogle: () => Promise<void>;\n  signOut: () => Promise<void>;\n  isAdmin: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [profile, setProfile] = useState<Profile | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // 初期セッションの取得\n    supabase.auth.getSession()\n      .then(({ data: { session } }) => {\n        setSession(session);\n        setUser(session?.user ?? null);\n        if (session?.user) {\n          fetchProfile(session.user.id);\n        } else {\n          setLoading(false);\n        }\n      })\n      .catch((err) => {\n        console.error('Error getting session:', err);\n        setError('認証の初期化に失敗しました');\n        setLoading(false);\n      });\n\n    // 認証状態の変更を監視\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange(async (_event, session) => {\n      setSession(session);\n      setUser(session?.user ?? null);\n\n      if (session?.user) {\n        await fetchProfile(session.user.id);\n      } else {\n        setProfile(null);\n        setLoading(false);\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const fetchProfile = async (userId: string) => {\n    try {\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', userId)\n        .single();\n\n      if (error) {\n        console.error('Error fetching profile:', error);\n        // プロファイルが存在しない場合は作成する\n        if (error.code === 'PGRST116') {\n          await createProfile(userId);\n        }\n      } else {\n        setProfile(data);\n      }\n    } catch (error) {\n      console.error('Error in fetchProfile:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createProfile = async (userId: string) => {\n    try {\n      const { data: userData } = await supabase.auth.getUser();\n      const email = userData.user?.email || '';\n\n      const { data, error } = await supabase\n        .from('profiles')\n        .insert([\n          {\n            id: userId,\n            email: email,\n            is_admin: false,\n          },\n        ])\n        .select()\n        .single();\n\n      if (error) {\n        console.error('Error creating profile:', error);\n      } else {\n        setProfile(data);\n      }\n    } catch (error) {\n      console.error('Error in createProfile:', error);\n    }\n  };\n\n  const signInWithGoogle = async () => {\n    try {\n      const { error } = await supabase.auth.signInWithOAuth({\n        provider: 'google',\n        options: {\n          redirectTo: `${window.location.origin}/dashboard`,\n        },\n      });\n\n      if (error) {\n        console.error('Error signing in with Google:', error);\n        throw error;\n      }\n    } catch (error) {\n      console.error('Error in signInWithGoogle:', error);\n      throw error;\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) {\n        console.error('Error signing out:', error);\n        throw error;\n      }\n      setUser(null);\n      setProfile(null);\n      setSession(null);\n    } catch (error) {\n      console.error('Error in signOut:', error);\n      throw error;\n    }\n  };\n\n  const isAdmin = profile?.is_admin ?? false;\n\n  const value: AuthContextType = {\n    user,\n    profile,\n    session,\n    loading,\n    signInWithGoogle,\n    signOut,\n    isAdmin,\n  };\n\n  // エラーが発生した場合は表示\n  if (error) {\n    return (\n      <div style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        flexDirection: 'column',\n        padding: '20px'\n      }}>\n        <h2 style={{ color: '#e74c3c' }}>認証エラー</h2>\n        <p>{error}</p>\n        <button onClick={() => window.location.reload()}>\n          再読み込み\n        </button>\n      </div>\n    );\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///Users/hisaya.kobayashi/MyProject/quiz-creation-chatbot/app/login/page.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useAuth } from '@/contexts/AuthContext';\n\nexport const LoginPage: React.FC = () => {\n    const router = useRouter();\n    const { user, signInWithGoogle } = useAuth();\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n\n  // すでにログイン済みの場合はダッシュボードにリダイレクト\n  useEffect(() => {\n    if (user) {\n      router.push('/dashboard');\n    }\n  }, [user, router]);\n\n  const handleGoogleLogin = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      await signInWithGoogle();\n    } catch (err) {\n      console.error('Login error:', err);\n      setError('ログインに失敗しました。もう一度お試しください。');\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: '100vh',\n      backgroundColor: '#f5f5f5',\n      padding: '20px'\n    }}>\n      <div style={{\n        maxWidth: '1000px',\n        width: '100%',\n        backgroundColor: 'white',\n        padding: '50px 60px',\n        borderRadius: '12px',\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)'\n      }}>\n        {/* ヘッダー */}\n        <div style={{ textAlign: 'center', marginBottom: '40px' }}>\n          <h1 style={{\n            fontSize: '28px',\n            fontWeight: 'bold',\n            color: '#2c3e50',\n            marginBottom: '12px'\n          }}>\n            プログラミング問題作成ツール\n          </h1>\n          <p style={{\n            fontSize: '15px',\n            color: '#666',\n            lineHeight: '1.6'\n          }}>\n            コードの空欄問題を作成するための教育支援アプリケーションです\n          </p>\n        </div>\n\n        {/* Googleログインボタン */}\n        <button\n          onClick={handleGoogleLogin}\n          disabled={isLoading}\n          style={{\n            width: '100%',\n            padding: '14px 24px',\n            backgroundColor: isLoading ? '#ccc' : '#4285f4',\n            color: 'white',\n            border: 'none',\n            borderRadius: '6px',\n            fontSize: '17px',\n            fontWeight: '500',\n            cursor: isLoading ? 'not-allowed' : 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: '14px',\n            transition: 'background-color 0.2s',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.15)'\n          }}\n          onMouseOver={(e) => {\n            if (!isLoading) {\n              e.currentTarget.style.backgroundColor = '#357ae8';\n            }\n          }}\n          onMouseOut={(e) => {\n            if (!isLoading) {\n              e.currentTarget.style.backgroundColor = '#4285f4';\n            }\n          }}\n        >\n          <svg width=\"18\" height=\"18\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n            <path fill=\"#EA4335\" d=\"M24 9.5c3.54 0 6.71 1.22 9.21 3.6l6.85-6.85C35.9 2.38 30.47 0 24 0 14.62 0 6.51 5.38 2.56 13.22l7.98 6.19C12.43 13.72 17.74 9.5 24 9.5z\"/>\n            <path fill=\"#4285F4\" d=\"M46.98 24.55c0-1.57-.15-3.09-.38-4.55H24v9.02h12.94c-.58 2.96-2.26 5.48-4.78 7.18l7.73 6c4.51-4.18 7.09-10.36 7.09-17.65z\"/>\n            <path fill=\"#FBBC05\" d=\"M10.53 28.59c-.48-1.45-.76-2.99-.76-4.59s.27-3.14.76-4.59l-7.98-6.19C.92 16.46 0 20.12 0 24c0 3.88.92 7.54 2.56 10.78l7.97-6.19z\"/>\n            <path fill=\"#34A853\" d=\"M24 48c6.48 0 11.93-2.13 15.89-5.81l-7.73-6c-2.15 1.45-4.92 2.3-8.16 2.3-6.26 0-11.57-4.22-13.47-9.91l-7.98 6.19C6.51 42.62 14.62 48 24 48z\"/>\n            <path fill=\"none\" d=\"M0 0h48v48H0z\"/>\n          </svg>\n          {isLoading ? 'ログイン中...' : 'Googleでログイン'}\n        </button>\n\n        {/* エラーメッセージ */}\n        {error && (\n          <div style={{\n            marginTop: '16px',\n            padding: '12px',\n            backgroundColor: '#fee',\n            color: '#c33',\n            borderRadius: '4px',\n            fontSize: '14px',\n            textAlign: 'center'\n          }}>\n            {error}\n          </div>\n        )}\n\n        {/* フッター */}\n        <div style={{\n          marginTop: '30px',\n          paddingTop: '20px',\n          borderTop: '1px solid #eee',\n          textAlign: 'center'\n        }}>\n          <p style={{ fontSize: '12px', color: '#999', lineHeight: '1.6' }}>\n            初回ログイン時にアカウントが自動的に作成されます。<br />\n            続行することで、利用規約に同意したものとみなされます。\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAAA;AACA;;;;;AAEO,MAAM,YAAsB;IAC/B,MAAM,SAAS,IAAA,kMAAS;IACxB,MAAM,EAAE,IAAI,EAAE,gBAAgB,EAAE,GAAG,IAAA,0IAAO;IAC1C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAgB;IAEpD,8BAA8B;IAC9B,IAAA,kNAAS,EAAC;QACR,IAAI,MAAM;YACR,OAAO,IAAI,CAAC;QACd;IACF,GAAG;QAAC;QAAM;KAAO;IAEjB,MAAM,oBAAoB;QACxB,aAAa;QACb,SAAS;QACT,IAAI;YACF,MAAM;QACR,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,SAAS;YACT,aAAa;QACf;IACF;IAEA,qBACE,8OAAC;QAAI,OAAO;YACV,SAAS;YACT,gBAAgB;YAChB,YAAY;YACZ,WAAW;YACX,iBAAiB;YACjB,SAAS;QACX;kBACE,cAAA,8OAAC;YAAI,OAAO;gBACV,UAAU;gBACV,OAAO;gBACP,iBAAiB;gBACjB,SAAS;gBACT,cAAc;gBACd,WAAW;YACb;;8BAEE,8OAAC;oBAAI,OAAO;wBAAE,WAAW;wBAAU,cAAc;oBAAO;;sCACtD,8OAAC;4BAAG,OAAO;gCACT,UAAU;gCACV,YAAY;gCACZ,OAAO;gCACP,cAAc;4BAChB;sCAAG;;;;;;sCAGH,8OAAC;4BAAE,OAAO;gCACR,UAAU;gCACV,OAAO;gCACP,YAAY;4BACd;sCAAG;;;;;;;;;;;;8BAML,8OAAC;oBACC,SAAS;oBACT,UAAU;oBACV,OAAO;wBACL,OAAO;wBACP,SAAS;wBACT,iBAAiB,YAAY,SAAS;wBACtC,OAAO;wBACP,QAAQ;wBACR,cAAc;wBACd,UAAU;wBACV,YAAY;wBACZ,QAAQ,YAAY,gBAAgB;wBACpC,SAAS;wBACT,YAAY;wBACZ,gBAAgB;wBAChB,KAAK;wBACL,YAAY;wBACZ,WAAW;oBACb;oBACA,aAAa,CAAC;wBACZ,IAAI,CAAC,WAAW;4BACd,EAAE,aAAa,CAAC,KAAK,CAAC,eAAe,GAAG;wBAC1C;oBACF;oBACA,YAAY,CAAC;wBACX,IAAI,CAAC,WAAW;4BACd,EAAE,aAAa,CAAC,KAAK,CAAC,eAAe,GAAG;wBAC1C;oBACF;;sCAEA,8OAAC;4BAAI,OAAM;4BAAK,QAAO;4BAAK,OAAM;4BAA6B,SAAQ;;8CACrE,8OAAC;oCAAK,MAAK;oCAAU,GAAE;;;;;;8CACvB,8OAAC;oCAAK,MAAK;oCAAU,GAAE;;;;;;8CACvB,8OAAC;oCAAK,MAAK;oCAAU,GAAE;;;;;;8CACvB,8OAAC;oCAAK,MAAK;oCAAU,GAAE;;;;;;8CACvB,8OAAC;oCAAK,MAAK;oCAAO,GAAE;;;;;;;;;;;;wBAErB,YAAY,aAAa;;;;;;;gBAI3B,uBACC,8OAAC;oBAAI,OAAO;wBACV,WAAW;wBACX,SAAS;wBACT,iBAAiB;wBACjB,OAAO;wBACP,cAAc;wBACd,UAAU;wBACV,WAAW;oBACb;8BACG;;;;;;8BAKL,8OAAC;oBAAI,OAAO;wBACV,WAAW;wBACX,YAAY;wBACZ,WAAW;wBACX,WAAW;oBACb;8BACE,cAAA,8OAAC;wBAAE,OAAO;4BAAE,UAAU;4BAAQ,OAAO;4BAAQ,YAAY;wBAAM;;4BAAG;0CACvC,8OAAC;;;;;4BAAK;;;;;;;;;;;;;;;;;;;;;;;AAO3C","debugId":null}}]
}